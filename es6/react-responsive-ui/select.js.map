{"version":3,"sources":["../../source/react-responsive-ui/select.js"],"names":["React","PureComponent","PropTypes","ReactDOM","flat","styler","classNames","is_reachable","submit_parent_form","get_scrollbar_width","Zero_width_space","Select","props","state","options","toggle","bind","document_clicked","on_key_down","on_autocomplete_input_change","on_key_down_in_container","autocomplete","children","menu","toggler","onChange","Error","filtered_options","Children","forEach","element","value","label","document","addEventListener","fallback","setState","javascript","previous_props","previous_state","expanded","height","should_animate","undefined","calculate_height","removeEventListener","upward","scroll","alignment","saveOnIcons","disabled","style","className","list_style","styles","list_upward","list_downward","left","right","list_height","maxHeight","overflow","overflown","list_items","map","index","icon","render_list_item","wrapper_style","wrapper","textAlign","markup","select","ref","render_selected_item","menu_toggler","cloneElement","onClick","list","render_static","scrollbarPadding","focused_option_value","is_focused","list_item_style","item_style","list_item","item","marginRight","button","extra_props","event","item_clicked","key","type","Separator","concise","autocomplete_input_value","selected_label","get_selected_option_label","selected","get_selected_option","title","arrow","name","width","i","child","get_option","filter","x","option","indexOf","option_index","length","maxItems","vertical_padding","toggle_options","preventDefault","focusUponSelection","onToggle","setTimeout","scroll_to","dont_focus_after_toggle","focus","callback","findDOMNode","selected_option","options_list","target","ctrlKey","altKey","shiftKey","metaKey","keyCode","onTabOut","previous","previous_focusable_option","show_option","next","next_focusable_option","get_options","get_option_index","option_element","scrollTop","offsetTop","gravity","offsetHeight","list_dom_node","border","parseInt","window","getComputedStyle","borderTopWidth","scrollHeight","firstChild","paddingTop","scrollable_list_height","autocompleteWidth","input","verbose","toLowerCase","propTypes","arrayOf","shape","string","node","bool","any","func","isRequired","object","oneOf","number","defaultProps","separator"],"mappings":"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","file":"select.js","sourcesContent":["\n\n\n\n\n\n\n\n// WHEN THIS SELECT COMPONENT IS GONNA BE RE-COPY-PASTED FROM REACT-RESPONSIVE-UI\n// THIS COULD BE POTENTIALLY A BREAKING CHANGE DUE TO STYLES BEING MOVED FROM INLINE TO CSS.\n\n// 0.8.0 / 25.02.2017\n// ==================\n//\n//   * (could be a breaking change) Moving CSS positioning properties from inline styles to the CSS file therefore if using an edited CSS file from older versions update styles for `.rrui__select` and `.rrui__select__options`\n\n\n\n\n\n\n\n\n\n\n// https://github.com/halt-hammerzeit/react-responsive-ui/blob/master/source/select.js\n\nimport React, { PureComponent, PropTypes } from 'react'\nimport ReactDOM from 'react-dom'\nimport { flat as styler } from 'react-styling'\nimport classNames from 'classnames'\n\nimport { is_reachable, submit_parent_form, get_scrollbar_width } from './misc/dom'\n\n// Possible enhancements:\n//\n//  * If the menu is close to a screen edge,\n//    automatically reposition it so that it fits on the screen\n//  * Maybe show menu immediately above the toggler\n//    (like in Material design), not below it.\n//\n// https://material.google.com/components/menus.html\n\n// This is to stretch the selected option `icon`\n// to the appropriate `line-height` when `concise` mode is set.\n// (And also to stretch the selected option with no `label`)\nconst Zero_width_space = '\\u200b'\n\nexport default class Select extends PureComponent\n{\n\tstatic propTypes =\n\t{\n\t\t// A list of selectable options\n\t\toptions    : PropTypes.arrayOf\n\t\t(\n\t\t\tPropTypes.shape\n\t\t\t({\n\t\t\t\t// Option value\n\t\t\t\tvalue : React.PropTypes.string,\n\t\t\t\t// Option label\n\t\t\t\tlabel : React.PropTypes.string,\n\t\t\t\t// Option icon\n\t\t\t\ticon  : React.PropTypes.node\n\t\t\t})\n\t\t),\n\n\t\t// HTML form input `name` attribute\n\t\tname       : PropTypes.string,\n\n\t\t// Default label (like \"Choose\")\n\t\tlabel      : PropTypes.string,\n\n\t\t// Show icon only for selected item,\n\t\t// and only if `concise` is `true`.\n\t\tsaveOnIcons : PropTypes.bool,\n\n\t\t// Disables this control\n\t\tdisabled   : PropTypes.bool,\n\n\t\t// Selected option value\n\t\tvalue      : PropTypes.any,\n\n\t\t// Is called when an option is selected\n\t\tonChange   : PropTypes.func,\n\n\t\t// (exotic use case)\n\t\t// Falls back to a plain HTML input\n\t\t// when javascript is disabled (e.g. Tor)\n\t\tfallback  : PropTypes.bool.isRequired,\n\n\t\t// CSS class\n\t\tclassName  : PropTypes.string,\n\n\t\t// CSS style object\n\t\tstyle      : PropTypes.object,\n\n\t\t// If this flag is set to `true`,\n\t\t// and `icon` is specified for a selected option,\n\t\t// then the selected option will be displayed\n\t\t// as icon only, without the label.\n\t\tconcise    : PropTypes.bool,\n\n\t\t// If set to `true`, autocompletion is available\n\t\t// upon expanding the options list.\n\t\tautocomplete : PropTypes.bool,\n\n\t\t// Options list alignment (\"left\", \"right\")\n\t\talignment  : PropTypes.oneOf(['left', 'right']),\n\n\t\t// If `menu` flag is set to `true`\n\t\t// then it's gonna be a dropdown menu\n\t\t// with `children` elements inside.\n\t\tmenu       : PropTypes.bool,\n\n\t\t// If `menu` flag is set to `true`\n\t\t// then `toggler` is the dropdown menu button.\n\t\ttoggler    : PropTypes.element,\n\n\t\t// If `scroll` is `false`, then options list\n\t\t// is not limited in height.\n\t\t// Is `true` by default (scrollable).\n\t\tscroll     : PropTypes.bool.isRequired,\n\n\t\t// If this flag is set to `true`,\n\t\t// then the dropdown expands itself upward.\n\t\t// (as opposed to the default downward)\n\t\tupward     : PropTypes.bool,\n\n\t\t// Maximum items fitting the options list height (scrollable).\n\t\t// Is `6` by default.\n\t\tmaxItems  : PropTypes.number.isRequired,\n\n\t\t// Is `true` by default (only when the list of options is scrollable)\n\t\tscrollbarPadding : PropTypes.bool,\n\n\t\tfocusUponSelection : PropTypes.bool.isRequired,\n\n\t\tonTabOut : PropTypes.func,\n\n\t\tonToggle : PropTypes.func\n\n\t\t// transition_item_count_min : PropTypes.number,\n\t\t// transition_duration_min : PropTypes.number,\n\t\t// transition_duration_max : PropTypes.number\n\t}\n\n\tstatic defaultProps =\n\t{\n\t\talignment : 'left',\n\n\t\tscroll : true,\n\n\t\tmaxItems : 6,\n\n\t\tscrollbarPadding : true,\n\n\t\tfocusUponSelection : true,\n\n\t\tfallback : false,\n\n\t\t// transition_item_count_min : 1,\n\t\t// transition_duration_min : 60, // milliseconds\n\t\t// transition_duration_max : 100 // milliseconds\n\t}\n\n\tstate = {}\n\n\tconstructor(props)\n\t{\n\t\tsuper(props)\n\n\t\t// Shouldn't memory leak because\n\t\t// the set of options is assumed to be constant.\n\t\tthis.options = {}\n\n\t\tthis.toggle           = this.toggle.bind(this)\n\t\tthis.document_clicked = this.document_clicked.bind(this)\n\t\tthis.on_key_down      = this.on_key_down.bind(this)\n\n\t\tthis.on_autocomplete_input_change = this.on_autocomplete_input_change.bind(this)\n\t\tthis.on_key_down_in_container = this.on_key_down_in_container.bind(this)\n\n\t\tconst\n\t\t{\n\t\t\tautocomplete,\n\t\t\toptions,\n\t\t\tchildren,\n\t\t\tmenu,\n\t\t\ttoggler,\n\t\t\tonChange\n\t\t}\n\t\t= props\n\n\t\tif (autocomplete)\n\t\t{\n\t\t\tif (!options)\n\t\t\t{\n\t\t\t\tthrow new Error(`\"options\" property is required for an \"autocomplete\" select`)\n\t\t\t}\n\n\t\t\tthis.state.filtered_options = options\n\t\t}\n\n\t\tif (children && !menu)\n\t\t{\n\t\t\tReact.Children.forEach(children, function(element)\n\t\t\t{\n\t\t\t\tif (!element.props.value)\n\t\t\t\t{\n\t\t\t\t\tthrow new Error(`You must specify \"value\" prop on each child of <Select/>`)\n\t\t\t\t}\n\n\t\t\t\tif (!element.props.label)\n\t\t\t\t{\n\t\t\t\t\tthrow new Error(`You must specify \"label\" prop on each child of <Select/>`)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (menu && !toggler)\n\t\t{\n\t\t\tthrow new Error(`Supply a \"toggler\" component when enabling \"menu\" in <Select/>`)\n\t\t}\n\n\t\tif (!menu && !onChange)\n\t\t{\n\t\t\tthrow new Error(`\"onChange\" property must be specified for <Select/>`)\n\t\t}\n\t}\n\n\t// Client side rendering, javascript is enabled\n\tcomponentDidMount()\n\t{\n\t\tdocument.addEventListener('click', this.document_clicked)\n\n\t\tconst { fallback } = this.props\n\n\t\tif (fallback)\n\t\t{\n\t\t\tthis.setState({ javascript: true })\n\t\t}\n\t}\n\n\tcomponentDidUpdate(previous_props, previous_state)\n\t{\n\t\tconst { expanded, height } = this.state\n\n\t\tif (expanded !== previous_state.expanded)\n\t\t{\n\t\t\tif (expanded && this.should_animate())\n\t\t\t{\n\t\t\t\tif (height === undefined)\n\t\t\t\t{\n\t\t\t\t\tthis.calculate_height()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentWillUnmount()\n\t{\n\t\tdocument.removeEventListener('click', this.document_clicked)\n\t}\n\n\trender()\n\t{\n\t\tconst\n\t\t{\n\t\t\tupward,\n\t\t\tscroll,\n\t\t\tchildren,\n\t\t\tmenu,\n\t\t\ttoggler,\n\t\t\talignment,\n\t\t\tautocomplete,\n\t\t\tsaveOnIcons,\n\t\t\tfallback,\n\t\t\tdisabled,\n\t\t\tstyle,\n\t\t\tclassName\n\t\t}\n\t\t= this.props\n\n\t\tconst { filtered_options, expanded } = this.state\n\t\tconst options = autocomplete ? filtered_options : this.props.options\n\n\t\tlet list_style = upward ? styles.list_upward : styles.list_downward\n\n\t\t// Will be altered\n\t\tlist_style = { ...list_style }\n\n\t\tswitch (alignment)\n\t\t{\n\t\t\tcase 'left':\n\t\t\t\tlist_style.left = 0\n\t\t\t\tbreak\n\n\t\t\tcase 'right':\n\t\t\t\tlist_style.right = 0\n\t\t\t\tbreak\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported alignment: \"${alignment}\"`)\n\t\t}\n\n\t\tif (!menu && scroll && this.state.list_height !== undefined)\n\t\t{\n\t\t\tlist_style.maxHeight = this.state.list_height + 'px'\n\t\t}\n\n\t\tconst overflow = scroll && options && this.overflown()\n\n\t\tlet list_items\n\n\t\t// If a list of options is supplied as an array of `{ value, label }`,\n\t\t// then transform those elements to <buttons/>\n\t\tif (options)\n\t\t{\n\t\t\tlist_items = options.map(({ value, label, icon }, index) =>\n\t\t\t{\n\t\t\t\treturn this.render_list_item({ index, value, label, icon: !saveOnIcons && icon, overflow })\n\t\t\t})\n\t\t}\n\t\t// Else, if a list of options is supplied as a set of child React elements,\n\t\t// then render those elements.\n\t\telse\n\t\t{\n\t\t\tlist_items = React.Children.map(children, (element, index) =>\n\t\t\t{\n\t\t\t\treturn this.render_list_item({ index, element })\n\t\t\t})\n\t\t}\n\n\t\tconst wrapper_style = { ...styles.wrapper, textAlign: alignment }\n\n\t\tconst markup =\n\t\t(\n\t\t\t<div\n\t\t\t\tref={ ref => this.select = ref }\n\t\t\t\tonKeyDown={ this.on_key_down_in_container }\n\t\t\t\tstyle={ style ? { ...wrapper_style, ...style } : wrapper_style }\n\t\t\t\tclassName={ classNames\n\t\t\t\t(\n\t\t\t\t\tclassName,\n\t\t\t\t\t'rrui__select',\n\t\t\t\t\t{\n\t\t\t\t\t\t'rrui__rich'              : fallback,\n\t\t\t\t\t\t'rrui__select--upward'    : upward,\n\t\t\t\t\t\t'rrui__select--expanded'  : expanded,\n\t\t\t\t\t\t'rrui__select--collapsed' : !expanded,\n\t\t\t\t\t\t'rrui__select--disabled'  : disabled\n\t\t\t\t\t}\n\t\t\t\t) }>\n\n\t\t\t\t{/* Currently selected item */}\n\t\t\t\t{ !menu && this.render_selected_item() }\n\n\t\t\t\t{/* Menu toggler */}\n\t\t\t\t{ menu &&\n\t\t\t\t\t<div\n\t\t\t\t\t\tref={ ref => this.menu_toggler }\n\t\t\t\t\t\tstyle={ styles.menu_toggler }>\n\t\t\t\t\t\t{ React.cloneElement(toggler, { onClick : this.toggle }) }\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t\t{/* The list of selectable options */}\n\t\t\t\t{/* Math.max(this.state.height, this.props.max_height) */}\n\t\t\t\t<ul\n\t\t\t\t\tref={ ref => this.list = ref }\n\t\t\t\t\tstyle={ list_style }\n\t\t\t\t\tclassName={ classNames\n\t\t\t\t\t(\n\t\t\t\t\t\t'rrui__select__options',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'rrui__select__options--expanded'             : expanded,\n\t\t\t\t\t\t\t'rrui__select__options--simple-left-aligned'  : !children && alignment === 'left',\n\t\t\t\t\t\t\t'rrui__select__options--simple-right-aligned' : !children && alignment === 'right'\n\t\t\t\t\t\t}\n\t\t\t\t\t) }>\n\t\t\t\t\t{ list_items }\n\t\t\t\t</ul>\n\n\t\t\t\t{/* Fallback in case javascript is disabled */}\n\t\t\t\t{ fallback && !this.state.javascript && this.render_static() }\n\t\t\t</div>\n\t\t)\n\n\t\treturn markup\n\t}\n\n\trender_list_item({ index, element, value, label, icon, overflow }) // , first, last\n\t{\n\t\tconst { disabled, menu, scrollbarPadding } = this.props\n\t\tconst { focused_option_value } = this.state\n\n\t\t// If a list of options is supplied as a set of child React elements,\n\t\t// then extract values from their props.\n\t\tif (element)\n\t\t{\n\t\t\tvalue = element.props.value\n\t\t}\n\n\t\tconst is_focused = !menu && value === focused_option_value\n\n\t\tlet list_item_style = { textAlign: 'left' }\n\n\t\tlet item_style = styles.list_item\n\n\t\t// on overflow the vertical scrollbar will take up space\n\t\t// reducing padding-right and the only way to fix that\n\t\t// is to add additional padding-right\n\t\t//\n\t\t// a hack to restore padding-right taken up by a vertical scrollbar\n\t\tif (overflow && scrollbarPadding)\n\t\t{\n\t\t\titem_style = { ...styles.list.item }\n\n\t\t\titem_style.marginRight = get_scrollbar_width() + 'px'\n\t\t}\n\n\t\tlet button\n\n\t\t// If a list of options is supplied as a set of child React elements,\n\t\t// then enhance those elements with extra props.\n\t\tif (element)\n\t\t{\n\t\t\tconst extra_props =\n\t\t\t{\n\t\t\t\tstyle     : { ...item_style, ...element.props.style },\n\t\t\t\tclassName : classNames\n\t\t\t\t(\n\t\t\t\t\t'rrui__select__option',\n\t\t\t\t\t{\n\t\t\t\t\t\t'rrui__select__option--focused' : is_focused\n\t\t\t\t\t},\n\t\t\t\t\telement.props.className\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tconst onClick = element.props.onClick\n\n\t\t\textra_props.onClick = (event) =>\n\t\t\t{\n\t\t\t\tif (menu)\n\t\t\t\t{\n\t\t\t\t\tthis.toggle()\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.item_clicked(value, event)\n\t\t\t\t}\n\n\t\t\t\tif (onClick)\n\t\t\t\t{\n\t\t\t\t\tonClick(event)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbutton = React.cloneElement(element, extra_props)\n\t\t}\n\t\t// Else, if a list of options is supplied as an array of `{ value, label }`,\n\t\t// then transform those options to <buttons/>\n\t\telse\n\t\t{\n\t\t\tbutton = <button\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={event => this.item_clicked(value, event)}\n\t\t\t\tdisabled={disabled}\n\t\t\t\ttabIndex=\"-1\"\n\t\t\t\tclassName={classNames\n\t\t\t\t(\n\t\t\t\t\t'rrui__select__option',\n\t\t\t\t\t'rrui__button__button',\n\t\t\t\t\t{\n\t\t\t\t\t\t'rrui__select__option--focused' : is_focused\n\t\t\t\t\t}\n\t\t\t\t)}\n\t\t\t\tstyle={item_style}>\n\t\t\t\t{ icon && React.cloneElement(icon, { className: classNames(icon.props.className, 'rrui__select__option-icon') }) }\n\t\t\t\t{ label }\n\t\t\t</button>\n\t\t}\n\n\t\t// There can be an `undefined` value,\n\t\t// so just `{ value }` won't do here,\n\t\t// and `{ `${value}` }` is not ideal too,\n\t\t// because there theoretically can be a value `\"undefined\"`.\n\t\tconst key = `${index} ${value}`\n\n\t\t// Using just `index` for `ref`s is safe\n\t\t// because when `key` changes then the `ref` is updated\n\t\t// so there won't be inconsistencies.\n\t\tconst markup =\n\t\t(\n\t\t\t<li\n\t\t\t\tkey={ key }\n\t\t\t\tref={ ref => this.options[index] = ref }\n\t\t\t\tclassName={ classNames\n\t\t\t\t({\n\t\t\t\t\t'rrui__select__separator-option' : element && element.type === Select.Separator\n\t\t\t\t}) }\n\t\t\t\tstyle={ list_item_style }>\n\t\t\t\t{ button }\n\t\t\t</li>\n\t\t)\n\n\t\treturn markup\n\t}\n\n\trender_selected_item()\n\t{\n\t\tconst { children, value, label, disabled, autocomplete, concise } = this.props\n\t\tconst { expanded, autocomplete_input_value } = this.state\n\n\t\tconst selected_label = this.get_selected_option_label()\n\n\t\tif (autocomplete && expanded)\n\t\t{\n\t\t\tconst markup =\n\t\t\t(\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tref={ ref => this.autocomplete = ref }\n\t\t\t\t\tplaceholder={ selected_label || label }\n\t\t\t\t\tvalue={ autocomplete_input_value }\n\t\t\t\t\tonChange={ this.on_autocomplete_input_change }\n\t\t\t\t\tonKeyDown={ this.on_key_down }\n\t\t\t\t\tclassName={ classNames\n\t\t\t\t\t(\n\t\t\t\t\t\t'rrui__select__selected',\n\t\t\t\t\t\t'rrui__select__selected--autocomplete',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'rrui__select__selected--nothing' : !selected_label\n\t\t\t\t\t\t}\n\t\t\t\t\t) }/>\n\t\t\t)\n\n\t\t\treturn markup\n\t\t}\n\n\t\tconst selected = this.get_selected_option()\n\n\t\tconst markup =\n\t\t(\n\t\t\t<button\n\t\t\t\tref={ref => this.selected = ref}\n\t\t\t\ttype=\"button\"\n\t\t\t\tdisabled={disabled}\n\t\t\t\tonClick={this.toggle}\n\t\t\t\tonKeyDown={this.on_key_down}\n\t\t\t\tclassName={classNames\n\t\t\t\t(\n\t\t\t\t\t'rrui__select__selected',\n\t\t\t\t\t'rrui__button__button',\n\t\t\t\t\t{\n\t\t\t\t\t\t'rrui__select__selected--nothing' : !selected_label\n\t\t\t\t\t}\n\t\t\t\t)}>\n\n\t\t\t\t{/*\n\t\t\t\tThis is to stretch the selected option `icon`\n\t\t\t\tto the appropriate `line-height` when `concise` mode is set.\n\t\t\t\t(And also to stretch the selected option with no `label`)\n\t\t\t\t*/}\n\t\t\t\t{ Zero_width_space }\n\n\t\t\t\t{/* the label (or icon) */}\n\t\t\t\t{ (concise && selected && selected.icon) ? React.cloneElement(selected.icon, { title: selected_label }) : (selected_label || label) }\n\n\t\t\t\t{/* an arrow */}\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames('rrui__select__arrow',\n\t\t\t\t\t{\n\t\t\t\t\t\t'rrui__select__arrow--expanded': expanded\n\t\t\t\t\t})}\n\t\t\t\t\tstyle={styles.arrow}/>\n\t\t\t</button>\n\t\t)\n\n\t\treturn markup\n\t}\n\n\t// supports disabled javascript\n\trender_static()\n\t{\n\t\tconst\n\t\t{\n\t\t\tname,\n\t\t\tvalue,\n\t\t\tlabel,\n\t\t\tdisabled,\n\t\t\toptions,\n\t\t\tmenu,\n\t\t\ttoggler,\n\t\t\tstyle,\n\t\t\tclassName,\n\t\t\tchildren\n\t\t}\n\t\t= this.props\n\n\t\tif (menu)\n\t\t{\n\t\t\treturn <div className=\"rrui__rich__fallback\">{toggler}</div>\n\t\t}\n\n\t\tconst markup =\n\t\t(\n\t\t\t<div className=\"rrui__rich__fallback\">\n\t\t\t\t<select\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue={value === null ? undefined : value}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tonChange={event => {}}\n\t\t\t\t\tstyle={ style ? { ...style, width: 'auto' } : { width: 'auto' } }\n\t\t\t\t\tclassName={className}>\n\t\t\t\t\t{\n\t\t\t\t\t\toptions\n\t\t\t\t\t\t?\n\t\t\t\t\t\toptions.map((item, i) =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn <option\n\t\t\t\t\t\t\t\tclassName=\"rrui__select__option\"\n\t\t\t\t\t\t\t\tkey={ `${i} ${item.value}` }\n\t\t\t\t\t\t\t\tvalue={ item.value }>\n\t\t\t\t\t\t\t\t{ item.label }\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t})\n\t\t\t\t\t\t:\n\t\t\t\t\t\tReact.Children.map(children, child =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn <option\n\t\t\t\t\t\t\t\tclassName=\"rrui__select__option\"\n\t\t\t\t\t\t\t\tkey={ child.props.value }\n\t\t\t\t\t\t\t\tvalue={ child.props.value }>\n\t\t\t\t\t\t\t\t{ child.props.label }\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t)\n\n\t\treturn markup\n\t}\n\n\tget_selected_option()\n\t{\n\t\tconst { value } = this.props\n\n\t\treturn this.get_option(value)\n\t}\n\n\tget_option(value)\n\t{\n\t\tconst { options, children } = this.props\n\n\t\tif (options)\n\t\t{\n\t\t\treturn options.filter(x => x.value === value)[0]\n\t\t}\n\n\t\tlet option\n\n\t\tReact.Children.forEach(children, function(child)\n\t\t{\n\t\t\tif (child.props.value === value)\n\t\t\t{\n\t\t\t\toption = child\n\t\t\t}\n\t\t})\n\n\t\treturn option\n\t}\n\n\tget_option_index(option)\n\t{\n\t\tconst { options, children } = this.props\n\n\t\tif (options)\n\t\t{\n\t\t\treturn options.indexOf(option)\n\t\t}\n\n\t\tlet option_index\n\n\t\tReact.Children.forEach(children, function(child, index)\n\t\t{\n\t\t\tif (child.props.value === option.value)\n\t\t\t{\n\t\t\t\toption_index = index\n\t\t\t}\n\t\t})\n\n\t\treturn option_index\n\t}\n\n\tget_selected_option_label()\n\t{\n\t\tconst { options } = this.props\n\n\t\tconst selected = this.get_selected_option()\n\n\t\tif (!selected)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\tif (options)\n\t\t{\n\t\t\treturn selected.label\n\t\t}\n\n\t\treturn selected.props.label\n\t}\n\n\toverflown()\n\t{\n\t\treturn this.props.options.length > this.props.maxItems\n\t}\n\n\tscrollable_list_height(state = this.state)\n\t{\n\t\treturn (state.height - 2 * state.vertical_padding) * (this.props.maxItems / this.props.options.length) + state.vertical_padding\n\t}\n\n\tshould_animate()\n\t{\n\t\treturn true\n\n\t\t// return this.props.options.length >= this.props.transition_item_count_min\n\t}\n\n\ttoggle(event, toggle_options = {})\n\t{\n\t\tif (event)\n\t\t{\n\t\t\t// Don't navigate away when clicking links\n\t\t\tevent.preventDefault()\n\n\t\t\t// Not discarding the click event because\n\t\t\t// other expanded selects may be listening to it.\n\t\t\t// // Discard the click event so that it won't reach `document` click listener\n\t\t\t// event.stopPropagation() // doesn't work\n\t\t\t// event.nativeEvent.stopImmediatePropagation()\n\t\t}\n\n\t\tconst\n\t\t{\n\t\t\tdisabled,\n\t\t\tautocomplete,\n\t\t\toptions,\n\t\t\tvalue,\n\t\t\tfocusUponSelection,\n\t\t\tonToggle\n\t\t}\n\t\t= this.props\n\n\t\tif (disabled)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\tconst { expanded } = this.state\n\n\t\tif (!expanded && autocomplete)\n\t\t{\n\t\t\tthis.setState\n\t\t\t({\n\t\t\t\tautocomplete_input_value: '',\n\t\t\t\tfiltered_options: options\n\t\t\t})\n\t\t}\n\n\t\t// Deferring expanding the select upon click\n\t\t// because document.onClick should finish first,\n\t\t// otherwise `event.target` may be detached from the DOM\n\t\t// and it would immediately toggle back to collapsed state.\n\t\tsetTimeout(() =>\n\t\t{\n\t\t\tthis.setState\n\t\t\t({\n\t\t\t\texpanded: !expanded\n\t\t\t})\n\n\t\t\tif (!expanded && options)\n\t\t\t{\n\t\t\t\t// Focus either the selected option\n\t\t\t\t// or the first option in the list.\n\n\t\t\t\tconst focused_option_value = value || options[0].value\n\n\t\t\t\tthis.setState({ focused_option_value })\n\n\t\t\t\t// Scroll down to the focused option\n\t\t\t\tthis.scroll_to(this.get_option(focused_option_value))\n\t\t\t}\n\n\t\t\t// If it's autocomplete, then focus <input/> field\n\t\t\t// upon toggling the select component.\n\t\t\tif (autocomplete && !toggle_options.dont_focus_after_toggle)\n\t\t\t{\n\t\t\t\tif (!expanded || (expanded && focusUponSelection))\n\t\t\t\t{\n\t\t\t\t\tsetTimeout(() =>\n\t\t\t\t\t{\n\t\t\t\t\t\t// Focus the toggler\n\t\t\t\t\t\tif (expanded)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.selected.focus()\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.autocomplete.focus()\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t0)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (onToggle)\n\t\t\t{\n\t\t\t\tonToggle(!expanded)\n\t\t\t}\n\n\t\t\tif (toggle_options.callback)\n\t\t\t{\n\t\t\t\ttoggle_options.callback()\n\t\t\t}\n\t\t},\n\t\t0)\n\t}\n\n\titem_clicked(value, event)\n\t{\n\t\tif (event)\n\t\t{\n\t\t\tevent.preventDefault()\n\t\t}\n\n\t\tconst\n\t\t{\n\t\t\tdisabled,\n\t\t\tonChange,\n\t\t\tautocomplete,\n\t\t\tfocusUponSelection\n\t\t}\n\t\t= this.props\n\n\t\tif (disabled)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\t// Focus the toggler\n\t\tif (focusUponSelection)\n\t\t{\n\t\t\tif (autocomplete)\n\t\t\t{\n\t\t\t\tthis.autocomplete.focus()\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.selected.focus()\n\t\t\t}\n\t\t}\n\n\t\tthis.toggle(undefined, { callback: () => onChange(value) })\n\t}\n\n\tdocument_clicked(event)\n\t{\n\t\tconst autocomplete = ReactDOM.findDOMNode(this.autocomplete)\n\t\tconst selected_option = ReactDOM.findDOMNode(this.selected)\n\t\tconst options_list = ReactDOM.findDOMNode(this.list)\n\n\t\t// Don't close the select if its expander button has been clicked,\n\t\t// or if autocomplete has been clicked,\n\t\t// or if an option was selected from the list.\n\t\tif (is_reachable(event.target, options_list)\n\t\t\t|| (autocomplete && is_reachable(event.target, autocomplete))\n\t\t\t|| (selected_option && is_reachable(event.target, selected_option)))\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\tthis.setState({ expanded: false })\n\n\t\tconst { onToggle } = this.props\n\n\t\tif (onToggle)\n\t\t{\n\t\t\tonToggle(false)\n\t\t}\n\t}\n\n\t// Would have used `onBlur()` handler here\n\t// with `is_reachable(event.relatedTarget, container)`,\n\t// but it has an IE bug in React.\n\t// https://github.com/facebook/react/issues/3751\n\t//\n\t// Therefore, using the hacky `document.onClick` handlers\n\t// and this `onKeyDown` Tab handler\n\t// until `event.relatedTarget` support is consistent in React.\n\t//\n\ton_key_down_in_container(event)\n\t{\n\t\tif (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\tconst { expanded } = this.state\n\n\t\tswitch (event.keyCode)\n\t\t{\n\t\t\t// Toggle on Tab out\n\t\t\tcase 9:\n\t\t\t\tif (expanded)\n\t\t\t\t{\n\t\t\t\t\tthis.toggle(undefined, { dont_focus_after_toggle: true })\n\n\t\t\t\t\tconst { onTabOut } = this.props\n\n\t\t\t\t\tif (onTabOut)\n\t\t\t\t\t{\n\t\t\t\t\t\tonTabOut(event)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn\n\t\t}\n\t}\n\n\ton_key_down(event)\n\t{\n\t\tif (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\tconst { options, value, autocomplete } = this.props\n\t\tconst { expanded, focused_option_value } = this.state\n\n\t\t// Maybe add support for `children` arrow navigation in future\n\t\tif (options)\n\t\t{\n\t\t\tswitch (event.keyCode)\n\t\t\t{\n\t\t\t\t// Select the previous option (if present) on up arrow\n\t\t\t\tcase 38:\n\t\t\t\t\tevent.preventDefault()\n\n\t\t\t\t\tconst previous = this.previous_focusable_option()\n\n\t\t\t\t\tif (previous)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.show_option(previous, 'top')\n\t\t\t\t\t\treturn this.setState({ focused_option_value: previous.value })\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\n\n\t\t\t\t// Select the next option (if present) on down arrow\n\t\t\t\tcase 40:\n\t\t\t\t\tevent.preventDefault()\n\n\t\t\t\t\tconst next = this.next_focusable_option()\n\n\t\t\t\t\tif (next)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.show_option(next, 'bottom')\n\t\t\t\t\t\treturn this.setState({ focused_option_value: next.value })\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\n\n\t\t\t\t// Collapse on Escape\n\t\t\t\t//\n\t\t\t\t// Maybe add this kind of support for \"Escape\" key in some future:\n\t\t\t\t//  hiding the item list, cancelling current item selection process\n\t\t\t\t//  and restoring the selection present before the item list was toggled.\n\t\t\t\t//\n\t\t\t\tcase 27:\n\t\t\t\t\t// Collapse the list if it's expanded\n\t\t\t\t\tif (this.state.expanded)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.toggle()\n\n\t\t\t\t\t\t// Restore focus when the list is collapsed\n\t\t\t\t\t\tsetTimeout\n\t\t\t\t\t\t(() =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.selected.focus()\n\t\t\t\t\t\t},\n\t\t\t\t\t\t0)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\n\n\t\t\t\t// on Enter\n\t\t\t\tcase 13:\n\t\t\t\t\t// Choose the focused item on Enter\n\t\t\t\t\tif (expanded)\n\t\t\t\t\t{\n\t\t\t\t\t\tevent.preventDefault()\n\n\t\t\t\t\t\t// If an item is focused\n\t\t\t\t\t\t// (which may not be a case\n\t\t\t\t\t\t//  when autocomplete is matching no items)\n\t\t\t\t\t\t// (still for non-autocomplete select\n\t\t\t\t\t\t//  it is valid to have a default option)\n\t\t\t\t\t\tif (this.get_options() && this.get_options().length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Choose the focused item\n\t\t\t\t\t\t\tthis.item_clicked(focused_option_value)\n\t\t\t\t\t\t\t// And collapse the select\n\t\t\t\t\t\t\tthis.toggle()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Else it should have just submitted the form on Enter,\n\t\t\t\t\t// but it wouldn't because the select element activator is a <button/>\n\t\t\t\t\t// therefore hitting Enter while being focused on it just pushes that button.\n\t\t\t\t\t// So submit the enclosing form manually.\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (submit_parent_form(ReactDOM.findDOMNode(this.select)))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\n\n\t\t\t\t// on Spacebar\n\t\t\t\tcase 32:\n\t\t\t\t\t// Choose the focused item on Enter\n\t\t\t\t\tif (expanded)\n\t\t\t\t\t{\n\t\t\t\t\t\t// only if it it's an `options` select\n\t\t\t\t\t\t// and also if it's not an autocomplete\n\t\t\t\t\t\tif (this.get_options() && !autocomplete)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tevent.preventDefault()\n\n\t\t\t\t\t\t\t// `focused_option_value` could be non-existent\n\t\t\t\t\t\t\t// in case of `autocomplete`, but since\n\t\t\t\t\t\t\t// we're explicitly not handling autocomplete here\n\t\t\t\t\t\t\t// it is valid to select any options including the default ones.\n\t\t\t\t\t\t\tthis.item_clicked(focused_option_value)\n\t\t\t\t\t\t\tthis.toggle()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Expand the select otherwise\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\tthis.toggle()\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\n\tget_options()\n\t{\n\t\tconst { autocomplete, options } = this.props\n\t\tconst { filtered_options } = this.state\n\n\t\treturn autocomplete ? filtered_options : options\n\t}\n\n\t// Get the previous value (relative to the currently focused value)\n\tprevious_focusable_option()\n\t{\n\t\tconst options = this.get_options()\n\t\tconst { focused_option_value } = this.state\n\n\t\tlet i = 0\n\t\twhile (i < options.length)\n\t\t{\n\t\t\tif (options[i].value === focused_option_value)\n\t\t\t{\n\t\t\t\tif (i - 1 >= 0)\n\t\t\t\t{\n\t\t\t\t\treturn options[i - 1]\n\t\t\t\t}\n\t\t\t}\n\t\t\ti++\n\t\t}\n\t}\n\n\t// Get the next value (relative to the currently focused value)\n\tnext_focusable_option()\n\t{\n\t\tconst options = this.get_options()\n\t\tconst { focused_option_value } = this.state\n\n\t\tlet i = 0\n\t\twhile (i < options.length)\n\t\t{\n\t\t\tif (options[i].value === focused_option_value)\n\t\t\t{\n\t\t\t\tif (i + 1 < options.length)\n\t\t\t\t{\n\t\t\t\t\treturn options[i + 1]\n\t\t\t\t}\n\t\t\t}\n\t\t\ti++\n\t\t}\n\t}\n\n\t// Scrolls to an option having the value\n\tscroll_to(option)\n\t{\n\t\tconst index = this.get_option_index(option)\n\t\tconst option_element = ReactDOM.findDOMNode(this.options[index])\n\t\tReactDOM.findDOMNode(this.list).scrollTop = option_element.offsetTop\n\t}\n\n\t// Fully shows an option (scrolls to it if neccessary)\n\tshow_option(option, gravity)\n\t{\n\t\tconst index = this.get_option_index(option)\n\t\tconst option_element = ReactDOM.findDOMNode(this.options[index])\n\t\tconst list = ReactDOM.findDOMNode(this.list)\n\n\t\tswitch (gravity)\n\t\t{\n\t\t\tcase 'top':\n\t\t\t\tif (option_element.offsetTop < list.scrollTop)\n\t\t\t\t{\n\t\t\t\t\tlist.scrollTop = option_element.offsetTop\n\t\t\t\t}\n\t\t\t\treturn\n\n\t\t\tcase 'bottom':\n\t\t\t\tif (option_element.offsetTop + option_element.offsetHeight > list.scrollTop + list.offsetHeight)\n\t\t\t\t{\n\t\t\t\t\tlist.scrollTop = option_element.offsetTop + option_element.offsetHeight - list.offsetHeight\n\t\t\t\t}\n\t\t\t\treturn\n\t\t}\n\t}\n\n\t// Calculates height of the expanded item list\n\tcalculate_height()\n\t{\n\t\tconst list_dom_node = ReactDOM.findDOMNode(this.list)\n\t\tconst border = parseInt(window.getComputedStyle(list_dom_node).borderTopWidth)\n\t\tconst height = list_dom_node.scrollHeight // + 2 * border // inner height + 2 * border\n\n\t\tconst vertical_padding = parseInt(window.getComputedStyle(list_dom_node.firstChild).paddingTop)\n\n\t\t// const images = list_dom_node.querySelectorAll('img')\n\n\t\t// if (images.length > 0)\n\t\t// {\n\t\t// \treturn this.preload_images(list_dom_node, images)\n\t\t// }\n\n\t\tconst state = { height, vertical_padding, border }\n\n\t\tif (!this.props.menu && this.props.scroll && this.props.options && this.overflown())\n\t\t{\n\t\t\tstate.list_height = this.scrollable_list_height(state)\n\t\t}\n\n\t\tthis.setState(state)\n\t}\n\n\tget_widest_label_width()\n\t{\n\t\treturn this.props.styles.autocompleteWidth\n\t}\n\n\ton_autocomplete_input_change(event)\n\t{\n\t\tconst input = event.target.value\n\n\t\tconst { options } = this.props\n\n\t\tconst filtered_options = options.filter(({ value, label, verbose, icon }) =>\n\t\t{\n\t\t\treturn (verbose || label).toLowerCase().indexOf(input.toLowerCase()) !== -1\n\t\t})\n\n\t\tthis.setState\n\t\t({\n\t\t\tautocomplete_input_value: input,\n\t\t\tfiltered_options,\n\t\t\tfocused_option_value: filtered_options.length > 0 ? filtered_options[0].value : undefined\n\t\t})\n\t}\n\n\t// // https://github.com/daviferreira/react-sanfona/blob/master/src/AccordionItem/index.jsx#L54\n\t// // Wait for images to load before calculating maxHeight\n\t// preload_images(node, images)\n\t// {\n\t// \tlet images_loaded = 0\n\t//\n\t// \tconst image_loaded = () =>\n\t// \t{\n\t// \t\timages_loaded++\n\t//\n\t// \t\tif (images_loaded === images.length)\n\t// \t\t{\n\t// \t\t\tthis.setState\n\t// \t\t\t({\n\t// \t\t\t\theight: this.props.expanded ? node.scrollHeight : 0\n\t// \t\t\t})\n\t// \t\t}\n\t// \t}\n\t//\n\t// \tfor (let i = 0; i < images.length; i += 1)\n\t// \t{\n\t// \t\tconst image = new Image()\n\t// \t\timage.src = images[i].src\n\t// \t\timage.onload = image.onerror = image_loaded\n\t// \t}\n\t// }\n}\n\nSelect.Separator = function(props)\n{\n\treturn <div className=\"rrui__select__separator\" style={styles.separator}/>\n}\n\nconst styles = styler\n`\n\twrapper\n\t\tposition   : relative\n\t\tdisplay    : inline-block\n\t\t// text-align : inherit\n\n\t\t-webkit-user-select : none\n\t\t-moz-user-select    : none\n\t\t-ms-user-select     : none\n\t\tuser-select         : none\n\n\tarrow\n\t\tdisplay  : inline-block\n\n\tlist\n\t\tposition        : absolute\n\t\tz-index         : 1\n\t\tmargin-top      : 0\n\t\tmargin-bottom   : 0\n\t\tpadding         : 0\n\t\tlist-style-type : none\n\t\toverflow-x      : hidden\n\n\t\t&downward\n\t\t\t// when html page is overflown by a long list\n\t\t\t// this bottom margin takes effect\n\t\t\tmargin-bottom : 1em\n\n\t\t&upward\n\t\t\tbottom: 100%\n\n\t\t\t// when html page is overflown by a long list\n\t\t\t// this top margin takes effect\n\t\t\tmargin-top : 1em\n\n\tlist_item\n\t\tdisplay     : inline-block\n\t\twhite-space : nowrap\n\n\tmenu_toggler\n\t\tdisplay : inline-block\n\n\tseparator\n\t\tpadding     : 0\n\t\tline-height : 0\n\t\tfont-size   : 0\n`"]}